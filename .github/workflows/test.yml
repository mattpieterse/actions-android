name: CI Workflow

# - About ----------------------------------------------------------------------
# CI/CD GitHub Action to ensure that the application compiles successfully.
#
# The workflow will automate the compilation of the application using the debug
# configuration to ensure that the remote contains a working copy of the source
# code at all times. This prevents conflicts and blockers.
# ------------------------------------------------------------------------------

on:
  push:
    branches:
      - main
      - staging
      - 'topic/**'
      - 'rollback/**'
      - 'debug/**'
  pull_request:
    branches:
      - main 
      - staging
      - 'topic/**'
      - 'rollback/**'
      - 'debug/**'

jobs:
  checkout:
    name: Checkout
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0


  validate:
    name: Validate
    needs: checkout
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Branches
        shell: bash
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

          echo "üîç Validating branch: $BRANCH_NAME"
          
          if [[ "$BRANCH_NAME" =~ ^(main|staging|topic\/[a-z0-9-]+|rollback\/[a-z0-9-]+|debug\/[a-z0-9-]+)$ ]]; then
            echo "‚úÖ Follows accepted conventions."
            exit 0
          else
            echo "‚ùå Invalid branch name: '$BRANCH_NAME'                  "
            echo "Allowed conventions:                                    "
            echo "  - main                                                "
            echo "  - staging                                             "
            echo "  - rollback/<lowercase-name> (letters, numbers, dashes)"
            echo "  - topic/<lowercase-name> (letters, numbers, dashes)   "
            echo "  - debug/<lowercase-name> (letters, numbers, dashes)   "
            exit 1
          fi


  assemble:
    name: Assemble Debug
    if: ${{ always() }}
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configure the Android Environment
        uses: ./.github/actions/setup-android
        with:
          java-distros: 'temurin'
          java-version: '17'
          enable-secrets: 'true'
          enable-caching: 'true'

      - name: Assemble (Debug)
        shell: bash
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.console=plain
        run: |
          ./gradlew assembleDebug --no-daemon --stacktrace